#ifndef kl_256_int16_t_sin_h
#define kl_256_int16_t_sin_h

#define KL_256_int16_t_sin_cells 256

namespace lamb {
  namespace Tables {
    namespace sin256_int16_t {
      typedef int16_t value_type;
      const   size_t length = 256;
      const   int16_t data[]
#ifdef __AVR__
PROGMEM
#endif
      = {
             0,      804,     1607,     2410,     3211,     4011,     4807,     5601, 
          6392,     7179,     7961,     8739,     9511,    10278,    11039,    11792, 
         12539,    13278,    14009,    14732,    15446,    16151,    16845,    17530, 
         18204,    18867,    19519,    20159,    20787,    21402,    22005,    22594, // 31
    
         23170,    23731,    24279,    24811,    25329,    25832,    26319,    26790, 
         27245,    27683,    28105,    28510,    28898,    29268,    29621,    29956, 
         30273,    30571,    30852,    31113,    31356,    31580,    31785,    31971, 
         32137,    32285,    32412,    32521,    32609,    32678,    32728,    32757, // 63
    
         32767,    32757,    32728,    32678,    32609,    32521,    32412,    32285, 
         32137,    31971,    31785,    31580,    31356,    31113,    30852,    30571, 
         30273,    29956,    29621,    29268,    28898,    28510,    28105,    27683, 
         27245,    26790,    26319,    25832,    25329,    24811,    24279,    23731, // 95
    
         23170,    22594,    22005,    21402,    20787,    20159,    19519,    18867, 
         18204,    17530,    16845,    16151,    15446,    14732,    14009,    13278, 
         12539,    11792,    11039,    10278,     9511,     8739,     7961,     7179, 
          6392,     5601,     4807,     4011,     3211,     2410,     1607,      804, // 127
    
             0,     -804,    -1607,    -2410,    -3211,    -4011,    -4807,    -5601, 
         -6392,    -7179,    -7961,    -8739,    -9511,   -10278,   -11039,   -11792, 
        -12539,   -13278,   -14009,   -14732,   -15446,   -16151,   -16845,   -17530, 
        -18204,   -18867,   -19519,   -20159,   -20787,   -21402,   -22005,   -22594, // 159
    
        -23170,   -23731,   -24279,   -24811,   -25329,   -25832,   -26319,   -26790, 
        -27245,   -27683,   -28105,   -28510,   -28898,   -29268,   -29621,   -29956, 
        -30273,   -30571,   -30852,   -31113,   -31356,   -31580,   -31785,   -31971, 
        -32137,   -32285,   -32412,   -32521,   -32609,   -32678,   -32728,   -32757, // 191
    
        -32767,   -32757,   -32728,   -32678,   -32609,   -32521,   -32412,   -32285, 
        -32137,   -31971,   -31785,   -31580,   -31356,   -31113,   -30852,   -30571, 
        -30273,   -29956,   -29621,   -29268,   -28898,   -28510,   -28105,   -27683, 
        -27245,   -26790,   -26319,   -25832,   -25329,   -24811,   -24279,   -23731, // 223
    
        -23170,   -22594,   -22005,   -21402,   -20787,   -20159,   -19519,   -18867, 
        -18204,   -17530,   -16845,   -16151,   -15446,   -14732,   -14009,   -13278, 
        -12539,   -11792,   -11039,   -10278,    -9511,    -8739,    -7961,    -7179, 
         -6392,    -5601,    -4807,    -4011,    -3211,    -2410,    -1607,     -804, // 255
    
      };
    }
  }
}
#endif
