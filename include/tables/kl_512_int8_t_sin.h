#ifndef kl_512_int8_t_sin_h
#define kl_512_int8_t_sin_h

#define KL_512_int8_t_sin_cells 512

namespace lamb {
  namespace tables {
    namespace sin512_int8_t {
      typedef int8_t value_type;
      const   size_t length = 512;
      const   int8_t data[]
#ifdef __AVR__
PROGMEM
#endif
      = {
             0,        1,        3,        4,        6,        7,        9,       10, 
            12,       14,       15,       17,       18,       20,       21,       23, 
            24,       26,       27,       29,       30,       32,       34,       35, 
            37,       38,       39,       41,       42,       44,       45,       47, // 31
    
            48,       50,       51,       53,       54,       55,       57,       58, 
            60,       61,       62,       64,       65,       66,       68,       69, 
            70,       72,       73,       74,       75,       77,       78,       79, 
            80,       82,       83,       84,       85,       86,       87,       89, // 63
    
            90,       91,       92,       93,       94,       95,       96,       97, 
            98,       99,      100,      101,      102,      103,      104,      105, 
           106,      106,      107,      108,      109,      110,      110,      111, 
           112,      113,      113,      114,      115,      115,      116,      117, // 95
    
           117,      118,      118,      119,      120,      120,      121,      121, 
           122,      122,      122,      123,      123,      124,      124,      124, 
           125,      125,      125,      125,      126,      126,      126,      126, 
           126,      127,      127,      127,      127,      127,      127,      127, // 127
    
           127,      127,      127,      127,      127,      127,      127,      127, 
           126,      126,      126,      126,      126,      125,      125,      125, 
           125,      124,      124,      124,      123,      123,      122,      122, 
           122,      121,      121,      120,      120,      119,      118,      118, // 159
    
           117,      117,      116,      115,      115,      114,      113,      113, 
           112,      111,      110,      110,      109,      108,      107,      106, 
           106,      105,      104,      103,      102,      101,      100,       99, 
            98,       97,       96,       95,       94,       93,       92,       91, // 191
    
            90,       89,       87,       86,       85,       84,       83,       82, 
            80,       79,       78,       77,       75,       74,       73,       72, 
            70,       69,       68,       66,       65,       64,       62,       61, 
            60,       58,       57,       55,       54,       53,       51,       50, // 223
    
            48,       47,       45,       44,       42,       41,       39,       38, 
            37,       35,       34,       32,       30,       29,       27,       26, 
            24,       23,       21,       20,       18,       17,       15,       14, 
            12,       10,        9,        7,        6,        4,        3,        1, // 255
    
             0,       -1,       -3,       -4,       -6,       -7,       -9,      -10, 
           -12,      -14,      -15,      -17,      -18,      -20,      -21,      -23, 
           -24,      -26,      -27,      -29,      -30,      -32,      -34,      -35, 
           -37,      -38,      -39,      -41,      -42,      -44,      -45,      -47, // 287
    
           -48,      -50,      -51,      -53,      -54,      -55,      -57,      -58, 
           -60,      -61,      -62,      -64,      -65,      -66,      -68,      -69, 
           -70,      -72,      -73,      -74,      -75,      -77,      -78,      -79, 
           -80,      -82,      -83,      -84,      -85,      -86,      -87,      -89, // 319
    
           -90,      -91,      -92,      -93,      -94,      -95,      -96,      -97, 
           -98,      -99,     -100,     -101,     -102,     -103,     -104,     -105, 
          -106,     -106,     -107,     -108,     -109,     -110,     -110,     -111, 
          -112,     -113,     -113,     -114,     -115,     -115,     -116,     -117, // 351
    
          -117,     -118,     -118,     -119,     -120,     -120,     -121,     -121, 
          -122,     -122,     -122,     -123,     -123,     -124,     -124,     -124, 
          -125,     -125,     -125,     -125,     -126,     -126,     -126,     -126, 
          -126,     -127,     -127,     -127,     -127,     -127,     -127,     -127, // 383
    
          -127,     -127,     -127,     -127,     -127,     -127,     -127,     -127, 
          -126,     -126,     -126,     -126,     -126,     -125,     -125,     -125, 
          -125,     -124,     -124,     -124,     -123,     -123,     -122,     -122, 
          -122,     -121,     -121,     -120,     -120,     -119,     -118,     -118, // 415
    
          -117,     -117,     -116,     -115,     -115,     -114,     -113,     -113, 
          -112,     -111,     -110,     -110,     -109,     -108,     -107,     -106, 
          -106,     -105,     -104,     -103,     -102,     -101,     -100,      -99, 
           -98,      -97,      -96,      -95,      -94,      -93,      -92,      -91, // 447
    
           -90,      -89,      -87,      -86,      -85,      -84,      -83,      -82, 
           -80,      -79,      -78,      -77,      -75,      -74,      -73,      -72, 
           -70,      -69,      -68,      -66,      -65,      -64,      -62,      -61, 
           -60,      -58,      -57,      -55,      -54,      -53,      -51,      -50, // 479
    
           -48,      -47,      -45,      -44,      -42,      -41,      -39,      -38, 
           -37,      -35,      -34,      -32,      -30,      -29,      -27,      -26, 
           -24,      -23,      -21,      -20,      -18,      -17,      -15,      -14, 
           -12,      -10,       -9,       -7,       -6,       -4,       -3,       -1, // 511
    
      };
    }
  }
}
#endif
